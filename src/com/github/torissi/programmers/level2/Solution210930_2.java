package com.github.torissi.programmers.level2;


import java.util.Arrays;

public class Solution210930_2 {

    public boolean solution(String[] phone_book) {
        boolean answer = true;

        Arrays.sort(phone_book);

        for (int i = 0; i < phone_book.length; i++) {
            if (phone_book[i + 1].startsWith(phone_book[i]) ) {
                answer = false;
                break;
            }
        }

        return answer;
    }

    public static void main(String[] args) {
    }
}


/* 전화번호 목록
문제 설명
전화번호부에 적힌 전화번호 중, 한 번호가 다른 번호의 접두어인 경우가 있는지 확인하려 합니다.
전화번호가 다음과 같을 경우, 구조대 전화번호는 영석이의 전화번호의 접두사입니다.

구조대 : 119
박준영 : 97 674 223
지영석 : 11 9552 4421
전화번호부에 적힌 전화번호를 담은 배열 phone_book 이 solution 함수의 매개변수로 주어질 때, 어떤 번호가 다른 번호의 접두어인 경우가 있으면 false를 그렇지 않으면 true를 return 하도록 solution 함수를 작성해주세요.

제한 사항
phone_book의 길이는 1 이상 1,000,000 이하입니다.
각 전화번호의 길이는 1 이상 20 이하입니다.
같은 전화번호가 중복해서 들어있지 않습니다.
입출력 예제
phone_book	return
["119", "97674223", "1195524421"]	false
["123","456","789"]	true
["12","123","1235","567","88"]	false
입출력 예 설명
입출력 예 #1
앞에서 설명한 예와 같습니다.

입출력 예 #2
한 번호가 다른 번호의 접두사인 경우가 없으므로, 답은 true입니다.

입출력 예 #3
첫 번째 전화번호, “12”가 두 번째 전화번호 “123”의 접두사입니다. 따라서 답은 false입니다.

알림

2021년 3월 4일, 테스트 케이스가 변경되었습니다. 이로 인해 이전에 통과하던 코드가 더 이상 통과하지 않을 수 있습니다.

*/

/*
정확성  테스트
테스트 1 〉	통과 (0.22ms, 75.5MB)
테스트 2 〉	통과 (0.23ms, 81.9MB)
테스트 3 〉	통과 (0.20ms, 80MB)
테스트 4 〉	통과 (0.23ms, 77.7MB)
테스트 5 〉	통과 (0.21ms, 75.8MB)
테스트 6 〉	통과 (0.23ms, 75MB)
테스트 7 〉	통과 (0.22ms, 76.8MB)
테스트 8 〉	통과 (0.18ms, 76.2MB)
테스트 9 〉	통과 (0.20ms, 72.6MB)
테스트 10 〉	통과 (0.19ms, 71.5MB)
테스트 11 〉	통과 (0.31ms, 70.2MB)
테스트 12 〉	통과 (0.23ms, 81.5MB)
테스트 13 〉	통과 (0.21ms, 76.8MB)
테스트 14 〉	통과 (1.99ms, 76.9MB)
테스트 15 〉	통과 (2.24ms, 79.5MB)
테스트 16 〉	통과 (2.53ms, 76.7MB)
테스트 17 〉	통과 (3.51ms, 75.5MB)
테스트 18 〉	통과 (3.73ms, 79.9MB)
테스트 19 〉	통과 (5.81ms, 84.1MB)
테스트 20 〉	통과 (6.70ms, 83.1MB)
효율성  테스트
테스트 1 〉	통과 (21.21ms, 58.1MB)
테스트 2 〉	통과 (13.37ms, 56.8MB)
테스트 3 〉	통과 (350.58ms, 97.5MB)
테스트 4 〉	통과 (294.60ms, 96.6MB)
*/
